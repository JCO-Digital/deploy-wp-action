on:
  workflow_call:
    inputs:
      php_version:
        description: "PHP version to use"
        default: "8.4"
        type: string
      node_version:
        description: "Node version to use"
        default: "20"
        type: string
      is_jcore2:
        description: "Is JCORE2 theme"
        default: false
        type: boolean
      composer_version:
        description: "Composer version"
        default: "v2"
        type: string
      fetch_submodules:
        description: "Should submodules be fetched"
        default: false
        type: boolean
      platform:
        description: "What platform should the action run on"
        default: "ubuntu-latest"
        type: string
      artifact:
        description: "Name of the artifact"
        default: "build_files"
        type: string
      slack_channel:
        description: "Slack channel ID to post notifications to"
        default: ""
        type: string
    secrets:
      SSH_GITHUB_KEY:
        required: true
      COMPOSER_AUTH:
        required: true
      SLACK_BOT_TOKEN:
        required: false
      PRIVATE_KEY:
        required: false

jobs:
  build:
    runs-on: ${{ inputs.platform }}
    steps:
      - id: slack
        if: ${{ inputs.slack_channel != '' }}
        name: Slack notification (start)
        uses: slackapi/slack-github-action@v1
        with:
          # The following message update step does not accept a channel name.
          # Setting a channel ID here for consistency is highly recommended.
          channel-id: ${{ inputs.slack_channel }}
          payload: |
            {
              "text": ":construction_worker: ${{ github.repository }} build ${{ github.ref_name }} by ${{ github.actor }} started.",
              "attachments": [
                {
                  "pretext": ":hammer: Building...",
                  "color": "dbab09",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "In Progress"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - uses: actions/checkout@v4
        with:
          submodules: ${{ inputs.fetch_submodules && ! inputs.is_jcore2 }}

      - name: Add Bitbucket Known Hosts
        if: ${{ inputs.is_jcore2 }}
        run: echo BITBUCKET_KNOWN_HOSTS="$(ssh-keyscan -t rsa bitbucket.org)" >> $GITHUB_ENV

      - name: Install Bitbucket Key
        if: ${{ inputs.is_jcore2 }}
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_GITHUB_KEY }}
          name: id_ed25519
          known_hosts: ${{ env.BITBUCKET_KNOWN_HOSTS }}

      - name: Fetch submodules
        if: ${{ inputs.is_jcore2 }}
        run: git submodule update --init --recursive

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}

      - uses: pnpm/action-setup@v2

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php_version }}
          tools: composer:${{ inputs.composer_version }}

      - name: Fetch Github token for Composer
        id: composer-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.TOKEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Add GH Oauth token to Composer
        run: |
          MERGED_COMPOSER_AUTH=$(jq -c '. + {"github-oauth":{ "github.com": "${{ steps.composer-token.outputs.token }}" }}' <<< '${{ secrets.COMPOSER_AUTH }}')
          echo "COMPOSER_AUTH=$MERGED_COMPOSER_AUTH" >> $GITHUB_ENV

      - name: Set Font Awesome Pro Token
        run: |
          pnpm config set @fortawesome:registry=https://npm.fontawesome.com/
          pnpm config set //npm.fontawesome.com/:_authToken=${{ secrets.FONT_AWESOME_PRO_TOKEN }}

      - name: Make
        run: make ci

      - name: Upload built files
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact }}
          path: |
            .
            !node_modules
            !.git*
            !**/node_modules
          retention-days: 1

      - uses: slackapi/slack-github-action@v1
        name: Slack notification (success)
        if: ${{ success() && inputs.slack_channel != '' }}
        with:
          # Unlike the step posting a new message, this step does not accept a channel name.
          # Please use a channel ID, not a name here.
          channel-id: ${{ inputs.slack_channel }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text": ":white_check_mark: ${{ github.repository }} build ${{ github.ref_name }} by ${{ github.actor }} finished.",
              "attachments": [
                {
                  "pretext": ":house_with_garden: Finished building",
                  "color": "28a745",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "Completed"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - uses: slackapi/slack-github-action@v1
        name: Slack notification (failure)
        if: ${{ failure() && inputs.slack_channel != '' }}
        with:
          # Unlike the step posting a new message, this step does not accept a channel name.
          # Please use a channel ID, not a name here.
          channel-id: ${{ inputs.slack_channel }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text": ":x: ${{ github.repository }} build ${{ github.ref_name }} started by ${{ github.actor }} failed!",
              "attachments": [
                {
                  "pretext": ":fire: Failed to build",
                  "color": "e11d21",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "Failed"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
